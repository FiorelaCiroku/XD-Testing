# This is a workflow that is able to automate the testing procedure of XD. 
# Trigger: A commit to the input file.
# Input: Input files from the ontology engineers. 
# Output: The execution of a test case. 

# The name of the workflow
name: XDTesting

# The event that triggers the action.
on: 
  push: 
    paths: 
      - 'ontology-network/musical-performance/**'
  workflow_dispatch:
 
jobs:

# This workflow contains a job called "test-run"
  run-test:
  
  # The type of runner that the job will run on.
    runs-on: ubuntu-latest
    
    env:
        check: False
          
    # Check out the repository where the action is going to be executed on.
    steps:
      - name: Checkout V2
        uses: actions/checkout@v2
      
      - name: Check-Input
        run: |
            cd ontology-network
            cd musical-performance
            while read -r line; do
            line="$line"
            cd $line
            counter=0
            for file in *.txt
            do 
              if [ -s $file ] 
              then
                rm -f empty.txt
                touch full.txt
                counter=$((counter+1))
            else
                # The file is empty.
                rm -f full.txt
                touch empty.txt
              fi
            done
            done < UserInput.txt
            if ((counter<4))
              then 
                echo "$check=False" >> $GITHUB_ENV
              else
                echo "check=True" >> $GITHUB_ENV
            fi
 
      - name: Print check
        if: ($check == False)
        run: echo $check     
        
      - name: Setup-JAVA
        uses: actions/setup-java@v2.4.0
        with:
          distribution: 'temurin' 
          java-version: '17'

# Download the latest release of OWLUnit jar from the Github repository
      - name: Setup-OWLUnit
        run: |
            curl -s https://api.github.com/repos/luigi-asprino/owl-unit/releases/latest \
            | grep browser_download_url \
            | cut -d : -f 2,3 \
            | tr -d \" \
            | wget -qi -
# Install OWLUnit         
      - name: Install OWLUnit
        run: |
            java -jar OWLUnit-0.3.2.jar
      
      - name: Run CQ test
        run: |
            cd ontology-network
            cd musical-performance
            while read -r line; do
            line="$line"
            # echo "Ontology fragment is $line"
            cd $line
            base="https://raw.githubusercontent.com/"
            base1=$(git config --get remote.origin.url | sed 's/.*\/\([^ ]*\/[^.]*\).*/\1/')
            echo "$base2"
            base2="/main/ontology-network/musical-performance/"
            CQbase="/SPARQLUnitTest/CQTestCase/"
            echo "$CQtestcase"
            CQtestcase="$base$base1$base2$line$CQbase"
            # echo "Test case directory url is $CQtestcase"
            cd SPARQLUnitTest
            cd CQTestCase
            for file in *.ttl
            do 
             echo " The file is $file"
             testcaseURL="$CQtestcase$file"
             # echo "Test case URL is $testcaseURL"
             cd ..
             cd ..
             cd ..
             cd ..
             cd ..
             output=$(java -jar OWLUnit-0.3.2.jar -c $testcaseURL)
            done
            cd ontology-network
            cd musical-performance
            cd $line
            cd TestDocumentation
            touch DocCase.txt
            echo "$output" >> DocCase.txt
            done < UserInput.txt
        # This step creates an automatic pull request for the directories that were created.      
      - name: Pull-to-master
        uses: peter-evans/create-pull-request@v3
            
