# This is an action that is able to check if all input necessary to construct the test is available.
# Trigger: Commit to the testcase paths from different test directories. 
# Input: The list of the files that is to be checked.
# Output: A continuation of the test execution in case the files are not empty, and a stop to the test execution otherwise.

# The name of the workflow
name: Input cross-check

# The event that triggers the action is a commit to the ontology module directory. 
on: 
 # push: 
 #   branches: 
 #     - main
 #   paths: 
 #     - 'ontology-network/musical-performance-ontology/**'
    
  workflow_dispatch:
  
jobs:
  
  # This workflow contains a job called "check-input"
  check-input:
    
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps that are executed for this job
    steps:
  
      # Checks-out your repository under $GITHUB_WORKSPACE, so the job can access it
      - uses: actions/checkout@v2

      # Retrive the name of the conceptual component
      # Run through the files that are located in the conceptual component folder and check if they are empty or not.Ã¹
      # Display the result of the check for each file
      - name: check-input
        run: |
            cd ontology-network
            cd musical-performance
            while read -r line; do
            line="$line"
            echo "Line read from file - $line" 
            cd $line
            
            if [ -s CompetencyQuestions.txt ]; then
             echo "CQ exists!"
            fi
            
            if [ -s SPARQLQueries.txt ]; then
             echo "SPARQL exists!"
            fi
            
            if [ -s ExpectedResults.txt ]; then
             echo "ER exists!"
            fi
            
            if [ -s $line.owl ]; then
             echo "Ontology exists!"
            fi
            
            if [ -s GeneralConstraints.txt ]; then
             echo "GC exists!"
            fi
            
            
            
            if [ -s CompetencyQuestions.txt ] && [ -s SPARQLQueries.txt ] && [ -s ExpectedResults.txt ] && [ -s $line.owl ]; then
                echo "CQ Test run ready to begin!"
            elif [ -s GeneralConstraints.txt ] && [ -s SPARQLQueries.txt ] && [ -s $line.owl ]; then
              echo "IV Test run ready to begin!"
            else
              echo "Missing files: Test run cannot start!"
            fi
            done < UserInput.txt
            
           
      
                  
              
              
              
              
