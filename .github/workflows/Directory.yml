# This is an workflow that is able to read text files and create directory structures.
# Trigger: Commit to the ontology module directory. 
# Input: A file with the name of the conceptual component that is to be tested
# Output: 1. Reading the file to extract the name 2. The display of the name 3. Creation of a test directory for the conceptual component. 4) A pull request to add the directories to the main branch. 
# branches:  - main


# The name of the workflow
name: Create directory structure

# The action is triggered when there is a commit in the ontology module folder.
on: 
  push: 
    paths: 
      - 'ontology-network/musical-performance/UserInput.txt'
  workflow_dispatch:

jobs:
  # This workflow contains a job called "read file"
  read-file:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so the job can access it
      - uses: actions/checkout@v2

      # Create directory based on input
      - name: Create-Directory
        run: |
            cd ontology-network
            cd musical-performance
            while read -r line; do
            line="$line"
            mkdir $line
            cd $line
            mkdir SPARQLUnitTest
            mkdir InferenceVerificationTest
            mkdir ErrorProvocationTest
            mkdir TestDocumentation
            touch CompetencyQuestions.txt
            touch GeneralConstraints.txt
            touch SPARQLQueries.txt
            touch ExpectedResults.txt
            touch $line.owl
            done < UserInput.txt
            cd TestDocumentation
            touch README.md
            cd ..
            cd SPARQLUnitTest
            mkdir CQTestCase
            mkdir CQDataSet
            cd CQTestCase 
            touch CQTestCase.ttl
            cd ..
            cd CQDataSet 
            touch CQDataSet.ttl
            cd ..
            cd ..
            cd InferenceVerificationTest
            mkdir IVTestCase
            mkdir IVDataSet
            cd IVTestCase
            touch IVTestCase.ttl
            cd ..
            cd IVDataSet
            touch IVDataSet.ttl
            cd ..
            cd ..
            cd ErrorProvocationTest
            mkdir EPTestCase
            mkdir EPDataSet
            cd EPTestCase
            touch EPTestCase.ttl
            cd ..
            cd EPDataSet
            touch EPDataSet.ttl
              
      # Display the tree structure of the directory        
      - name: Display-tree-structure
        run: |
              echo " alias tree="find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'" " > printTree.zshrc
              tree
              
      # This step creates an automatic pull request for the directories that were created.      
      - name: Pull-to-master
        uses: peter-evans/create-pull-request@v3
